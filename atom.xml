<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[silveringsea on the run]]></title>
  <subtitle><![CDATA[going forward]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://silveringsea.github.io/"/>
  <updated>2016-02-22T15:11:40.000Z</updated>
  <id>http://silveringsea.github.io/</id>
  
  <author>
    <name><![CDATA[silveringsea]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[关于hadoop]]></title>
    <link href="http://silveringsea.github.io/2016/01/17/hadoop-usage/"/>
    <id>http://silveringsea.github.io/2016/01/17/hadoop-usage/</id>
    <published>2016-01-17T03:40:13.000Z</published>
    <updated>2016-02-22T15:11:40.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u7F16_u8BD1"><a href="#u7F16_u8BD1" class="headerlink" title="编译"></a>编译</h2><ol>
<li>requirement<br>安装 <a href="https://codeload.github.com/google/protobuf/zip/v2.5.0" target="_blank" rel="external">protobuf</a>，<br>经测试2.6版本的可以，3.0暂时还没有正式版。 可以修改project/pom.xml里面的protobuf.version 由2.5.0改成2.6.0，<br>于3.0暂时还没有正式版， 所以暂时还不行， 会报错protoc version is ‘libprotoc 3.0.0’, expected version is ‘2.5.0’<br>mvn package -Pdist -Ptar -Pdocs -skipTests <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd hadoop-mapreduce-project</span><br><span class="line">export Platform=x64 </span><br><span class="line">mvn clean <span class="operator"><span class="keyword">install</span> <span class="keyword">assembly</span>:<span class="keyword">assembly</span> -Pnative</span><br><span class="line">## Issue the <span class="keyword">following</span> command instead (<span class="keyword">while</span> still being <span class="keyword">in</span> the hadoop-mapreduce-<span class="keyword">project</span> folder:</span><br><span class="line">mvn <span class="keyword">package</span> -Pdist,<span class="keyword">native</span> -DskipTests=<span class="literal">true</span> -Dtar </span><br><span class="line">cd .. # <span class="keyword">move</span> back <span class="keyword">to</span> top-<span class="keyword">level</span> folder </span><br><span class="line">mvn <span class="keyword">package</span> -Pdist,<span class="keyword">native</span> -DskipTests=<span class="literal">true</span> -Dtar</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>编译中可能出现的错误<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Error: Failed to <span class="operator"><span class="keyword">execute</span> goal org.apache.maven.plugins:maven-<span class="keyword">assembly</span>-<span class="keyword">plugin</span>:<span class="number">2.2</span><span class="number">.1</span>:<span class="keyword">assembly</span> (<span class="keyword">default</span>-cli) <span class="keyword">on</span> <span class="keyword">project</span> hadoop-mapreduce: <span class="keyword">Error</span> reading assemblies: <span class="keyword">No</span> <span class="keyword">assembly</span> descriptors <span class="keyword">found</span>. -&gt; [<span class="keyword">Help</span> <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">The <span class="keyword">C</span>/<span class="keyword">C</span>++ header <span class="keyword">for</span> freetype (ft2build.h)  could <span class="keyword">not</span> be <span class="keyword">found</span>.  You may need <span class="keyword">to</span> <span class="keyword">install</span> the</span><br><span class="line">apt-<span class="keyword">get</span> <span class="keyword">install</span> freetype</span></span><br></pre></td></tr></table></figure></p>
<p>编译指令<br>mvn clean package -Pdist -Dtar -Dmaven.javadoc.skip=true -DskipTests -fail-at-end -Pnative</p>
<h2 id="u53C2_u8003"><a href="#u53C2_u8003" class="headerlink" title="参考"></a>参考</h2><p><a href="http://www.csrdu.org/nauman/2014/01/23/geting-started-with-hadoop-2-2-0-building/" target="_blank" rel="external">geting-started-with-hadoop-2-2-0-building</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u7F16_u8BD1"><a href="#u7F16_u8BD1" class="headerlink" title="编译"></a>编译</h2><ol>
<li>requirement<br>安装 <a href="https://codeload.gi]]>
    </summary>
    
      <category term="hadoop" scheme="http://silveringsea.github.io/tags/hadoop/"/>
    
      <category term="java" scheme="http://silveringsea.github.io/tags/java/"/>
    
      <category term="java" scheme="http://silveringsea.github.io/categories/java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[java principles]]></title>
    <link href="http://silveringsea.github.io/2016/01/15/java-principles/"/>
    <id>http://silveringsea.github.io/2016/01/15/java-principles/</id>
    <published>2016-01-15T02:40:46.000Z</published>
    <updated>2016-02-22T15:11:40.000Z</updated>
    <content type="html"><![CDATA[<h3 id="PECS_u539F_u5219_uFF1A_u751F_u4EA7_u8005_uFF08Producer_uFF09_u4F7F_u7528extends_uFF0C_u6D88_u8D39_u8005_uFF08Consumer_uFF09_u4F7F_u7528super_u3002"><a href="#PECS_u539F_u5219_uFF1A_u751F_u4EA7_u8005_uFF08Producer_uFF09_u4F7F_u7528extends_uFF0C_u6D88_u8D39_u8005_uFF08Consumer_uFF09_u4F7F_u7528super_u3002" class="headerlink" title="PECS原则：生产者（Producer）使用extends，消费者（Consumer）使用super。"></a>PECS原则：生产者（Producer）使用extends，消费者（Consumer）使用super。</h3><p>•生产者使用extends</p>
<p>如果你需要一个列表提供T类型的元素（即你想从列表中读取T类型的元素），你需要把这个列表声明成&lt;? extends T&gt;，比如List&lt;? extends Integer&gt;，因此你不能往该列表中添加任何元素。<br>•消费者使用super</p>
<p>如果需要一个列表使用T类型的元素（即你想把T类型的元素加入到列表中），你需要把这个列表声明成&lt;? super T&gt;，比如List&lt;? super Integer&gt;，因此你不能保证从中读取到的元素的类型。<br>•即是生产者，也是消费者</p>
<p>如果一个列表即要生产，又要消费，你不能使用泛型通配符声明列表，比如List<integer>。<br>请参考java.util.Collections里的copy方法(JDK1.7)：<br>来自stackoverflow的例子</integer></p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">PECS</span> (short <span class="keyword">for</span> <span class="string">"Producer extends and Consumer super"</span>) can be explained by : <span class="type">Get</span> <span class="keyword">and</span> <span class="type">Put</span> <span class="type">Principle</span></span><br><span class="line"><span class="type">Get</span> <span class="type">And</span> <span class="type">Put</span> <span class="type">Principle</span> (<span class="type">From</span> <span class="type">Java</span> <span class="type">Generics</span> <span class="keyword">and</span> <span class="type">Collections</span>)</span><br><span class="line"></span><br><span class="line"><span class="type">It</span> states,</span><br><span class="line"></span><br><span class="line">    use an extends wildcard <span class="keyword">when</span> you only get values <span class="keyword">out</span> <span class="keyword">of</span> a structure</span><br><span class="line">    use a super wildcard <span class="keyword">when</span> you only put values into a structure</span><br><span class="line">    <span class="keyword">and</span> don’t use a wildcard <span class="keyword">when</span> you both get <span class="keyword">and</span> put.</span><br><span class="line"></span><br><span class="line"><span class="type">Let</span>'s understand it by example:</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>. <span class="type">For</span> <span class="type">Extends</span> <span class="type">Wildcard</span>(get values i.e <span class="type">Producer</span> extends)</span><br><span class="line"></span><br><span class="line"><span class="type">Here</span> <span class="keyword">is</span> a <span class="keyword">method</span>, that takes a collection <span class="keyword">of</span> numbers, converts each to a double, <span class="keyword">and</span> sums them up</span><br><span class="line"></span><br><span class="line">public <span class="keyword">static</span> double sum(<span class="type">Collection</span>&lt;? extends <span class="type">Number</span>&gt; nums) &#123;</span><br><span class="line">   double s = <span class="number">0</span>.<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">for</span> (<span class="type">Number</span> num : nums) </span><br><span class="line">      s += num.doubleValue();</span><br><span class="line">   <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">Let</span>'s call the <span class="keyword">method</span> :</span><br><span class="line"></span><br><span class="line"><span class="type">List</span>&lt;<span class="type">Integer</span>&gt;ints = <span class="type">Arrays</span>.asList(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">assert sum(ints) == <span class="number">6</span>.<span class="number">0</span>;</span><br><span class="line"><span class="type">List</span>&lt;<span class="type">Double</span>&gt;doubles = <span class="type">Arrays</span>.asList(<span class="number">2</span>.<span class="number">78</span>,<span class="number">3</span>.<span class="number">14</span>);</span><br><span class="line">assert sum(doubles) == <span class="number">5</span>.<span class="number">92</span>;</span><br><span class="line"><span class="type">List</span>&lt;<span class="type">Number</span>&gt;nums = <span class="type">Arrays</span>.&lt;<span class="type">Number</span>&gt;asList(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>.<span class="number">78</span>,<span class="number">3</span>.<span class="number">14</span>);</span><br><span class="line">assert sum(nums) == <span class="number">8</span>.<span class="number">92</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">Since</span>, sum() <span class="keyword">method</span> uses extends, all <span class="keyword">of</span> the following calls are legal. <span class="type">The</span> first two calls would <span class="keyword">not</span> be legal <span class="keyword">if</span> extends was <span class="keyword">not</span> used.</span><br><span class="line"></span><br><span class="line"><span class="type">EXCEPTION</span> : <span class="type">You</span> cannot put anything into a <span class="keyword">type</span> declared <span class="keyword">with</span> an extends wildcard—<span class="keyword">except</span> <span class="keyword">for</span> the value null, which belongs to every reference <span class="keyword">type</span>:</span><br><span class="line"></span><br><span class="line"><span class="type">List</span>&lt;<span class="type">Integer</span>&gt; ints = new <span class="type">ArrayList</span>&lt;<span class="type">Integer</span>&gt;();</span><br><span class="line">ints.add(<span class="number">1</span>);</span><br><span class="line">ints.add(<span class="number">2</span>);</span><br><span class="line"><span class="type">List</span>&lt;? extends <span class="type">Number</span>&gt; nums = ints;</span><br><span class="line">nums.add(null);  // ok</span><br><span class="line">assert nums.toString().equals(<span class="string">"[1, 2, null]"</span>);</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>. <span class="type">For</span> <span class="type">Super</span> <span class="type">Wildcard</span>(put values i.e <span class="type">Consumer</span> super)</span><br><span class="line"></span><br><span class="line"><span class="type">Here</span> <span class="keyword">is</span> a <span class="keyword">method</span>, that takes a collection <span class="keyword">of</span> numbers <span class="keyword">and</span> an <span class="type">int</span> n, <span class="keyword">and</span> puts the first n integers, starting <span class="keyword">from</span> zero, into the collection:</span><br><span class="line"></span><br><span class="line">public <span class="keyword">static</span> <span class="type">void</span> count(<span class="type">Collection</span>&lt;? super <span class="type">Integer</span>&gt; ints, <span class="type">int</span> n) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) ints.add(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">Let</span>'s call the <span class="keyword">method</span> :</span><br><span class="line"></span><br><span class="line"><span class="type">List</span>&lt;<span class="type">Integer</span>&gt;ints = new <span class="type">ArrayList</span>&lt;<span class="type">Integer</span>&gt;();</span><br><span class="line">count(ints, <span class="number">5</span>);</span><br><span class="line">assert ints.toString().equals(<span class="string">"[0, 1, 2, 3, 4]"</span>);</span><br><span class="line"><span class="type">List</span>&lt;<span class="type">Number</span>&gt;nums = new <span class="type">ArrayList</span>&lt;<span class="type">Number</span>&gt;();</span><br><span class="line">count(nums, <span class="number">5</span>); nums.add(<span class="number">5</span>.<span class="number">0</span>);</span><br><span class="line">assert nums.toString().equals(<span class="string">"[0, 1, 2, 3, 4, 5.0]"</span>);</span><br><span class="line"><span class="type">List</span>&lt;<span class="type">Object</span>&gt;objs = new <span class="type">ArrayList</span>&lt;<span class="type">Object</span>&gt;();</span><br><span class="line">count(objs, <span class="number">5</span>); objs.add(<span class="string">"five"</span>);</span><br><span class="line">assert objs.toString().equals(<span class="string">"[0, 1, 2, 3, 4, five]"</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">Since</span>, count() <span class="keyword">method</span> uses super, all <span class="keyword">of</span> the following calls are legal: <span class="type">The</span> last two calls would <span class="keyword">not</span> be legal <span class="keyword">if</span> super was <span class="keyword">not</span> used.</span><br><span class="line"></span><br><span class="line"><span class="type">EXCEPTION</span> : you cannot get anything <span class="keyword">out</span> <span class="keyword">from</span> a <span class="keyword">type</span> declared <span class="keyword">with</span> a super wildcard—<span class="keyword">except</span> <span class="keyword">for</span> a value <span class="keyword">of</span> <span class="keyword">type</span> <span class="type">Object</span>, which <span class="keyword">is</span> a supertype <span class="keyword">of</span> every reference <span class="keyword">type</span>:</span><br><span class="line"></span><br><span class="line"><span class="type">List</span>&lt;<span class="type">Object</span>&gt; objs = <span class="type">Arrays</span>.&lt;<span class="type">Object</span>&gt;asList(<span class="number">1</span>,<span class="string">"two"</span>);</span><br><span class="line"><span class="type">List</span>&lt;? super <span class="type">Integer</span>&gt; ints = objs;</span><br><span class="line"><span class="type">String</span> str = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">Object</span> obj : ints) str += obj.toString();</span><br><span class="line">assert str.equals(<span class="string">"1two"</span>);</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>. <span class="type">When</span> both <span class="type">Get</span> <span class="keyword">and</span> <span class="type">Put</span>, don't <span class="type">Use</span> wildcard</span><br><span class="line"></span><br><span class="line"><span class="type">Whenever</span> you both put values into <span class="keyword">and</span> get values <span class="keyword">out</span> <span class="keyword">of</span> the same structure, you should <span class="keyword">not</span> use a wildcard.</span><br><span class="line"></span><br><span class="line">public <span class="keyword">static</span> double sumCount(<span class="type">Collection</span>&lt;<span class="type">Number</span>&gt; nums, <span class="type">int</span> n) &#123;</span><br><span class="line">   count(nums, n);</span><br><span class="line">   <span class="keyword">return</span> sum(nums);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>“PECS” is from the collection’s point of view. If you are only pulling items from a generic collection, it is a producer and you should use extends; if you are only stuffing items in, it is a consumer and you should use super. If you do both with the same collection, you shouldn’t use either extends or super.</p>
<p>Suppose you have a method that takes as its parameter a collection of things, but you want it to be more flexible than just accepting a Collection<thing>.</thing></p>
<p>Case 1: You want to go through the collection and do things with each item.<br>Then the list is a producer, so you should use a Collection&lt;? extends Thing&gt;.</p>
<p>The reasoning is that a Collection&lt;? extends Thing&gt; could hold any subtype of Thing, and thus each element will behave as a Thing when you perform your operation. (You actually cannot add anything to a Collection&lt;? extends Thing&gt;, because you cannot know at runtime which specific subtype of Thing the collection holds.)</p>
<p>Case 2: You want to add things to the collection.<br>Then the list is a consumer, so you should use a Collection&lt;? super Thing&gt;.</p>
<p>The reasoning here is that unlike Collection&lt;? extends Thing&gt;, Collection&lt;? super Thing&gt; can always hold a Thing no matter what the actual parameterized type is. Here you don’t care what is already in the list as long as it will allow a Thing to be added; this is what ? super Thing guarantees.</p>
<p>I’m always trying to think about it this way: A producer is allowed to produce something more specific, hence extends, a consumer is allowed to accept something more general, hence super. – Feuermurmel May 7 ‘13 at 13:11</p>
<p>Another way to remember the producer/consumer distinction is to think of a method signature. If you have a method doSomethingWithList(List list), you are consuming the list and so will need covariance / extends (or an invariant List). On the other hand if your method is List doSomethingProvidingList, then you are producing the List and will need contravariance / super (or an invariant List). – Raman Jan 24 ‘14 at 19:20</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="PECS_u539F_u5219_uFF1A_u751F_u4EA7_u8005_uFF08Producer_uFF09_u4F7F_u7528extends_uFF0C_u6D88_u8D39_u8005_uFF08Consumer_uFF09_u4F7F_u7]]>
    </summary>
    
      <category term="principles, therom" scheme="http://silveringsea.github.io/tags/principles-therom/"/>
    
      <category term="java" scheme="http://silveringsea.github.io/categories/java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[websockeet]]></title>
    <link href="http://silveringsea.github.io/2016/01/11/websockeet/"/>
    <id>http://silveringsea.github.io/2016/01/11/websockeet/</id>
    <published>2016-01-10T19:18:31.000Z</published>
    <updated>2016-02-22T15:11:40.000Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
      <category term="html5" scheme="http://silveringsea.github.io/tags/html5/"/>
    
      <category term="websocket" scheme="http://silveringsea.github.io/tags/websocket/"/>
    
      <category term="java" scheme="http://silveringsea.github.io/categories/java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[图形化的benchmark]]></title>
    <link href="http://silveringsea.github.io/2016/01/03/graphic-benchmark/"/>
    <id>http://silveringsea.github.io/2016/01/03/graphic-benchmark/</id>
    <published>2016-01-03T05:24:30.000Z</published>
    <updated>2016-02-23T00:16:14.000Z</updated>
    <content type="html"><![CDATA[<h2 id="matplotlib"><a href="#matplotlib" class="headerlink" title="matplotlib"></a>matplotlib</h2><p>windows下安装pip install matplotlib， 需要安装freetype, png库<br>从源码安装的话报错 ： The following required packages can not be built: freetype, png<br>依赖包：<br><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">               <span class="attribute">gtk3agg</span>: <span class="literal">no</span>  [Requires pygobject <span class="keyword">to</span> be installed.]</span><br><span class="line">             <span class="attribute">gtk3cairo</span>: <span class="literal">no</span>  [Requires cairocffi <span class="keyword">or</span> pycairo <span class="keyword">to</span> be installed.]</span><br><span class="line">                <span class="attribute">gtkagg</span>: <span class="literal">no</span>  [Requires pygtk]</span><br><span class="line">                 <span class="attribute">tkagg</span>: <span class="literal">no</span>  [The C/C++ header <span class="keyword">for</span> Tk (tk.h) could <span class="keyword">not</span> be</span><br><span class="line">                        found.  You may need <span class="keyword">to</span> install the development</span><br><span class="line">                        package.]</span><br><span class="line">                 <span class="attribute">wxagg</span>: <span class="literal">no</span>  [requires wxPython]</span><br><span class="line">                   <span class="attribute">gtk</span>: <span class="literal">no</span>  [Requires pygtk]</span><br><span class="line">                   <span class="attribute">agg</span>: <span class="literal">yes</span> [installing]</span><br><span class="line">                 <span class="attribute">cairo</span>: <span class="literal">no</span>  [cairocffi <span class="keyword">or</span> pycairo <span class="keyword">not</span> found]</span><br><span class="line">             <span class="attribute">windowing</span>: <span class="literal">yes</span> [installing, installing]</span><br><span class="line"></span><br><span class="line">OPTIONAL LATEX DEPENDENCIES</span><br><span class="line">                <span class="attribute">dvipng</span>: <span class="literal">no</span></span><br><span class="line">           <span class="attribute">ghostscript</span>: <span class="literal">no</span></span><br><span class="line">                 <span class="attribute">latex</span>: <span class="literal">no</span></span><br><span class="line">               <span class="attribute">pdftops</span>: <span class="literal">no</span></span><br><span class="line"></span><br><span class="line">OPTIONAL PACKAGE DATA</span><br><span class="line">                  <span class="attribute">dlls</span>: <span class="literal">no</span>  [skipping due <span class="keyword">to</span> configuration]</span><br></pre></td></tr></table></figure></p>
<h2 id="u6D4B_u8BD5_u5DE5_u5177"><a href="#u6D4B_u8BD5_u5DE5_u5177" class="headerlink" title="测试工具"></a>测试工具</h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="matplotlib"><a href="#matplotlib" class="headerlink" title="matplotlib"></a>matplotlib</h2><p>windows下安装pip install matplotlib， 需要安装]]>
    </summary>
    
      <category term="benchmark" scheme="http://silveringsea.github.io/tags/benchmark/"/>
    
      <category term="graphic" scheme="http://silveringsea.github.io/tags/graphic/"/>
    
      <category term="python" scheme="http://silveringsea.github.io/tags/python/"/>
    
      <category term="test" scheme="http://silveringsea.github.io/tags/test/"/>
    
      <category term="test" scheme="http://silveringsea.github.io/categories/test/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[mirror of a site]]></title>
    <link href="http://silveringsea.github.io/2015/12/27/mirror-of-a-site/"/>
    <id>http://silveringsea.github.io/2015/12/27/mirror-of-a-site/</id>
    <published>2015-12-27T03:07:58.000Z</published>
    <updated>2016-02-22T15:11:40.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u4F7F_u7528wget_3A"><a href="#u4F7F_u7528wget_3A" class="headerlink" title="使用wget:"></a>使用wget:</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mirror: 镜像  adjust-extension</span></span><br><span class="line"><span class="title">wget</span> --mirror --cvonvert-links --adjust-extension --page-requistites --<span class="built_in">no</span>-parent -nc <span class="url">http://xxxxxx</span></span><br><span class="line"><span class="comment">#简写形式</span></span><br><span class="line">wget -mkEpnp -nc </span><br><span class="line">wget -m -np -p <span class="url">http://xxxx</span></span><br><span class="line">···</span><br><span class="line">pavuk</span><br></pre></td></tr></table></figure>
<p>pavuk -enable_js -fnrules F ‘<em>.php?</em>‘ ‘%o.php’ -tr_str_str ‘?’ ‘<em>questionmark</em>‘ -norobots -dont_limit_inlines -dont_leave_dir<br><a href="http://xxxxx" target="_blank" rel="external">http://xxxxx</a>  &gt; OUT 2&gt;ERR<br>```</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u4F7F_u7528wget_3A"><a href="#u4F7F_u7528wget_3A" class="headerlink" title="使用wget:"></a>使用wget:</h2><figure class="highlight nginx"]]>
    </summary>
    
      <category term="tools" scheme="http://silveringsea.github.io/tags/tools/"/>
    
      <category term="tools" scheme="http://silveringsea.github.io/categories/tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[linux monitor]]></title>
    <link href="http://silveringsea.github.io/2015/12/20/linux-monitor/"/>
    <id>http://silveringsea.github.io/2015/12/20/linux-monitor/</id>
    <published>2015-12-20T05:34:24.000Z</published>
    <updated>2016-02-22T15:11:40.000Z</updated>
    <content type="html"><![CDATA[<h3 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h3><p>netstat 用于显示linux中各种网络相关信息。如网络链接 路由表  接口状态链接 多播成员等等。<br>-a (all)显示所有选项，默认不显示LISTEN相关<br>-t (tcp)仅显示tcp相关选项<br>-u (udp)仅显示udp相关选项<br>-n 拒绝显示别名，能显示数字的全部转化成数字。<br>-l 仅列出有在 Listen (监听) 的服務状态</p>
<p>-p 显示建立相关链接的程序名<br>-r 显示路由信息，路由表<br>-e 显示扩展信息，例如uid等<br>-s 按各个协议进行统计<br>-c 每隔一个固定时间，执行该netstat命令。</p>
<p>LISTEN和LISTENING的状态只有用-a或者-l才能看到<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">netstat -pntl | grep <span class="label">$PORT</span> or fuser -<span class="keyword">n</span> tcp <span class="label">$PORT</span>  #to find <span class="keyword">out</span> <span class="keyword">which</span> process (PID) is listening <span class="keyword">on</span> the specified TCP port</span><br><span class="line">netstat -p tcp | grep <span class="label">$PORT</span></span><br><span class="line"><span class="keyword">Use</span> lsof –i :portnumber.  </span><br><span class="line">lsof -<span class="keyword">n</span> -i4TCP:<span class="label">$PORT</span> | grep LISTEN</span><br><span class="line">netstat -at|<span class="keyword">more</span>  列出所有tcp端口</span><br><span class="line"> netstat -au</span><br><span class="line"> 只显示监听端口 netstat -<span class="keyword">l</span></span><br><span class="line"> 只列出所有监听unix端口 netstat -lx</span><br><span class="line"> 显示所有端口的统计信息 netstat -<span class="literal">s</span></span><br><span class="line"> 一秒钟输出一次tcp监听端口信息 netstat -ntplc</span><br><span class="line"> 显示路由信息 netstat -<span class="literal">r</span></span><br><span class="line"> 显示网络接口列表 netstat -<span class="literal">i</span></span><br><span class="line"> 显示所有tcp(netstat -<span class="keyword">st</span>)或udp(netstat -<span class="keyword">su</span>)的统计信息</span><br><span class="line"> 显示pid/进程名称 netstat -p   -p可以与其他参数一起使用 比如 显示tcp的进程id信息</span><br><span class="line"> netstat -ptnl</span><br></pre></td></tr></table></figure></p>
<h3 id="perf"><a href="#perf" class="headerlink" title="perf"></a>perf</h3>]]></content>
    <summary type="html">
    <![CDATA[<h3 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h3><p>netstat 用于显示linux中各种网络相关信息。如网络链接 路由表  接口状态链接 多播成员等]]>
    </summary>
    
      <category term="linux" scheme="http://silveringsea.github.io/tags/linux/"/>
    
      <category term="monitor" scheme="http://silveringsea.github.io/tags/monitor/"/>
    
      <category term="linux" scheme="http://silveringsea.github.io/categories/linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ios command]]></title>
    <link href="http://silveringsea.github.io/2015/12/19/ios/"/>
    <id>http://silveringsea.github.io/2015/12/19/ios/</id>
    <published>2015-12-19T10:36:35.000Z</published>
    <updated>2016-02-22T15:11:40.000Z</updated>
    <content type="html"><![CDATA[<h4 id="iPhone_Simulator_path_3A"><a href="#iPhone_Simulator_path_3A" class="headerlink" title="iPhone Simulator path:"></a>iPhone Simulator path:</h4><p>Xcode 6.x<br>/Applications/Xcode.app/Contents/Developer/Applications/iOS Simulator.app.<br>Xcode 4.x, 5.x /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Applications/</p>
<h4 id="u542F_u52A8_simulator_3A"><a href="#u542F_u52A8_simulator_3A" class="headerlink" title="启动 simulator:"></a>启动 simulator:</h4><p>xcode6:<br>xcrun simctl install booted<br>xcrun simctl install booted /path/to/your.app</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">未测试</span><br><span class="line">There are undocumented <span class="command"><span class="keyword">command</span> <span class="title">line</span> <span class="title">parameters</span> <span class="title">for</span> <span class="title">the</span> <span class="title">iOS</span> <span class="title">Simulator</span>, <span class="title">which</span> <span class="title">can</span> <span class="title">be</span> <span class="title">used</span> <span class="title">for</span> <span class="title">such</span> <span class="title">purposes</span>. <span class="title">The</span> <span class="title">one</span> <span class="title">you</span> <span class="title">are</span> <span class="title">looking</span> <span class="title">for</span> <span class="title">is</span>: -<span class="title">SimulateApplication</span></span></span><br><span class="line">An example <span class="command"><span class="keyword">command</span> <span class="title">line</span> <span class="title">starting</span> <span class="title">up</span> <span class="title">YourFavouriteApp</span>:</span></span><br><span class="line">/Developer/Platforms/iPhoneSimulator.<span class="built_in">platform</span>/Developer/Applications/iPhone\ Simulator.app/Contents/MacOS/iPhone\ Simulator -SimulateApplication path_to_your_app/YourFavouriteApp.app/YourFavouriteApp</span><br><span class="line">This will <span class="built_in">start</span> up your application <span class="keyword">without</span> <span class="keyword">any</span> installation <span class="operator">and</span> works <span class="operator">with</span> iOS Simulator <span class="number">4.2</span> <span class="keyword">at</span> least. You cannot reach <span class="operator">the</span> home menu, though.</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="iPhone_Simulator_path_3A"><a href="#iPhone_Simulator_path_3A" class="headerlink" title="iPhone Simulator path:"></a>iPhone Simulator]]>
    </summary>
    
      <category term="ios" scheme="http://silveringsea.github.io/tags/ios/"/>
    
      <category term="xcode" scheme="http://silveringsea.github.io/tags/xcode/"/>
    
      <category term="ios" scheme="http://silveringsea.github.io/categories/ios/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[java config]]></title>
    <link href="http://silveringsea.github.io/2015/12/19/java-config/"/>
    <id>http://silveringsea.github.io/2015/12/19/java-config/</id>
    <published>2015-12-19T08:09:12.000Z</published>
    <updated>2016-02-22T15:11:40.000Z</updated>
    <content type="html"><![CDATA[<h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h2><p>下载安装并配置path路径， JAVA_HOME环境变量</p>
<h2 id="mac_os_3A"><a href="#mac_os_3A" class="headerlink" title="mac os:"></a>mac os:</h2><p>下载安装</p>
<h2 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">切换jdk</span><br><span class="line"><span class="operator"><span class="keyword">update</span>-alternatives <span class="comment">--config java</span></span><br><span class="line">tar -zvfx jdk-<span class="number">7</span>u72-linux-x64.tar.gz</span><br><span class="line">sudo mv -rf jdk1<span class="number">.7</span><span class="number">.0</span>_72/ /opt/jdk1<span class="number">.7</span><span class="number">.0</span>_72</span><br><span class="line">apt-<span class="keyword">get</span> <span class="keyword">install</span> openjdk-<span class="number">7</span>-jdk</span><br><span class="line">##先检查<span class="keyword">java</span>安装情况</span><br><span class="line">sudo <span class="keyword">update</span>-alternatives <span class="comment">--display java</span></span><br><span class="line">sudo <span class="keyword">update</span>-alternatives <span class="comment">--display javac</span></span><br><span class="line">sudo <span class="keyword">update</span>-alternatives <span class="comment">--remove java /opt/jdk1.6.0_43/bin/java</span></span><br><span class="line">sudo <span class="keyword">update</span>-alternatives <span class="comment">--remove javac /opt/jdk1.6.0_43/bin/javac</span></span><br><span class="line">确认这些符号链接(symlinks)是否都删除了</span><br><span class="line"><span class="keyword">java</span> -<span class="keyword">version</span></span><br><span class="line">javac -<span class="keyword">version</span></span><br><span class="line">### 重新配置<span class="keyword">java</span>链接 </span><br><span class="line">sudo <span class="keyword">update</span>-alternatives <span class="comment">--install /usr/bin/java java /opt/jdk1.6.0_43/bin/java 300</span></span><br><span class="line">sudo <span class="keyword">update</span>-alternatives <span class="comment">--install /usr/bin/java java /opt/jdk1.7.0_72/bin/java 400</span></span><br><span class="line">sudo <span class="keyword">update</span>-alternatives <span class="comment">--install /usr/bin/java java /usr/lib/jvm/java-7-openjdk-amd64/bin/java 500</span></span><br><span class="line"></span><br><span class="line">sudo <span class="keyword">update</span>-alternatives <span class="comment">--install /usr/bin/javac javac /opt/jdk1.6.0_43/bin/javac 300</span></span><br><span class="line">sudo <span class="keyword">update</span>-alternatives <span class="comment">--install /usr/bin/javac javac /opt/jdk1.7.0_72/bin/javac 400</span></span><br><span class="line">sudo <span class="keyword">update</span>-alternatives <span class="comment">--install /usr/bin/javac javac /usr/lib/jvm/java-7-openjdk-amd64/bin/javac 500</span></span><br><span class="line"># 在需要的时候进行手动切换即可</span><br><span class="line">sudo <span class="keyword">update</span>-alternatives <span class="comment">--config java</span></span><br><span class="line">sudo <span class="keyword">update</span>-alternatives <span class="comment">--config javac</span></span></span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h2><p>下载安装并配置path路径， JAVA_HOME环境变量</p>
<h2 id="mac_os_3A]]>
    </summary>
    
      <category term="java" scheme="http://silveringsea.github.io/tags/java/"/>
    
      <category term="java" scheme="http://silveringsea.github.io/categories/java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[tomcat summary]]></title>
    <link href="http://silveringsea.github.io/2015/12/19/tomcat-summary/"/>
    <id>http://silveringsea.github.io/2015/12/19/tomcat-summary/</id>
    <published>2015-12-19T07:07:32.000Z</published>
    <updated>2016-02-22T15:11:40.000Z</updated>
    <content type="html"><![CDATA[<h3 id="Tomcat_u7684_u8FDE_u63A5_u65B9_u5F0F_uFF1A"><a href="#Tomcat_u7684_u8FDE_u63A5_u65B9_u5F0F_uFF1A" class="headerlink" title="Tomcat的连接方式："></a>Tomcat的连接方式：</h3><p><a href="http://tomcat.apache.org/tomcat-7.0-doc/connectors.html" target="_blank" rel="external">官方文档参考</a><br>Tomcat与Web服务器的连接方式有两种：<br>HTTP  通常情况下HTTP proxy的性能低于AJP的性能，所以集群时AJP是优选。<br>AJP </p>
<p>Nginx本身并不支持AJP连接， 第三方控件下载地址：<a href="https://github.com/yaoweibin/nginx_ajp_module" target="_blank" rel="external">https://github.com/yaoweibin/nginx_ajp_module</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="Tomcat_u7684_u8FDE_u63A5_u65B9_u5F0F_uFF1A"><a href="#Tomcat_u7684_u8FDE_u63A5_u65B9_u5F0F_uFF1A" class="headerlink" title="Tomcat的连]]>
    </summary>
    
      <category term="java" scheme="http://silveringsea.github.io/tags/java/"/>
    
      <category term="java" scheme="http://silveringsea.github.io/categories/java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[log config]]></title>
    <link href="http://silveringsea.github.io/2015/12/19/log-config/"/>
    <id>http://silveringsea.github.io/2015/12/19/log-config/</id>
    <published>2015-12-19T03:23:10.000Z</published>
    <updated>2016-02-22T21:59:38.000Z</updated>
    <content type="html"><![CDATA[<h3 id="java"><a href="#java" class="headerlink" title="java"></a>java</h3><p>SpringBoot的logback如何配置？<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The default strategy assumes <span class="keyword">that</span> <span class="keyword">if</span> you don't have a logback.xml (<span class="keyword">or</span> one <span class="keyword">of</span> <span class="keyword">the</span> other standard <span class="type">file</span> names) <span class="keyword">in</span> <span class="keyword">the</span> classpath <span class="keyword">then</span> you must be happy <span class="keyword">with</span> <span class="keyword">the</span> defaults (see LogbackLoggingSystem <span class="keyword">for</span> details). Spring Boot tries <span class="keyword">to</span> unify <span class="keyword">the</span> external configuration switches <span class="keyword">for</span> common logging sytems, so <span class="keyword">it</span> looks <span class="keyword">in</span> logging.config (<span class="keyword">it</span> didn't know <span class="keyword">about</span> logback.configurationFile). You could use <span class="keyword">that</span> instead (i.e. logging.config=<span class="type">file</span>:./src/test/resources/logback.xml), <span class="keyword">or</span> make sure your config <span class="type">file</span> <span class="keyword">is</span> <span class="function_start"><span class="keyword">on</span></span> <span class="keyword">the</span> classpath.</span><br></pre></td></tr></table></figure></p>
<p>如果是log4j 1.x:<br>java -jar -Dlog4j.configuration=[file:/full_path/log4j.properties] final.jar<br>log4j 2.x:<br>java -Dlogback.configurationFile=logback-test.xml -cp . -jar target/benchmarks.jar StringConcat</p>
<ol>
<li>Logback tries to find a file called logback.groovy in the classpath.</li>
<li>If no such file is found, logback tries to find a file called logback-test.xml in the classpath.</li>
<li>If no such file is found, it checks for the file logback.xml in the classpath..</li>
<li>If neither file is found, logback configures itself automatically using the BasicConfigurator which will cause logging output to be directed to the console.<br>Where should the configuration files such as logback.groovy, logback-test.xml or logback.xml be located on the classpath?</li>
</ol>
<p>Configuration files such as logback.groovy, logback-test.xml or logback.xml can be located directly under any folder declared in the class path. For example, if the class path reads “c:/java/jdk15/lib/rt.jar;c:/mylibs/“ then the logback.xml file should be located directly under “c:/mylibs/“, that is as “c:/mylibs/logback.xml”. Placing it under a sub-folder of c:/mylibs/, say, c:/mylibs/other/, will not work.</p>
<p>For web-applications, configuration files can be placed directly under WEB-INF/classes/.<br>So you need to put logback.xml in the classpath. On one project we had a similar problem although logback.xml was in the right place. Renaming it to logback-test.xml helped.</p>
<h3 id="php"><a href="#php" class="headerlink" title="php"></a>php</h3><p><a href="https://github.com/mmoreram/RSQueueBundle.git" target="_blank" rel="external">https://github.com/mmoreram/RSQueueBundle.git</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="java"><a href="#java" class="headerlink" title="java"></a>java</h3><p>SpringBoot的logback如何配置？<br><figure class="highlight applescrip]]>
    </summary>
    
      <category term="log" scheme="http://silveringsea.github.io/tags/log/"/>
    
      <category term="settings" scheme="http://silveringsea.github.io/categories/settings/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[代理工具]]></title>
    <link href="http://silveringsea.github.io/2015/12/18/http-proxy/"/>
    <id>http://silveringsea.github.io/2015/12/18/http-proxy/</id>
    <published>2015-12-18T13:42:11.000Z</published>
    <updated>2016-02-22T15:11:40.000Z</updated>
    <content type="html"><![CDATA[<h3 id="macosx__u8F6C_u5316socks5_u4EE3_u7406_u4E3Ahttp_u4EE3_u7406_u7684_u5DE5_u5177_3A"><a href="#macosx__u8F6C_u5316socks5_u4EE3_u7406_u4E3Ahttp_u4EE3_u7406_u7684_u5DE5_u5177_3A" class="headerlink" title="macosx 转化socks5代理为http代理的工具:"></a>macosx 转化socks5代理为http代理的工具:</h3><ol>
<li><a href="http://www.pps.univ-paris-diderot.fr/~jch/software/polipo/" target="_blank" rel="external">polipo</a> (<a href="https://github.com/jech/polipo.git" target="_blank" rel="external">githbu</a>)</li>
<li><a href="http://www.delegate.org/" target="_blank" rel="external">delegated</a><br>delegated -P8080 SERVER=http SOCKS=localhost:9050</li>
</ol>
<h3 id="mac_u4E0B_u5141_u8BB8ssh_u767B_u9646_u9700_u8981preference-_26gt_3B_u5171_u4EAB-_26gt_3B_u4E2D_u542F_u7528_u504F_u597D_u8BBE_u7F6E"><a href="#mac_u4E0B_u5141_u8BB8ssh_u767B_u9646_u9700_u8981preference-_26gt_3B_u5171_u4EAB-_26gt_3B_u4E2D_u542F_u7528_u504F_u597D_u8BBE_u7F6E" class="headerlink" title="mac下允许ssh登陆需要preference-&gt;共享-&gt;中启用偏好设置"></a>mac下允许ssh登陆需要preference-&gt;共享-&gt;中启用偏好设置</h3><p><a href="https://support.apple.com/kb/PH18726?locale=zh_CN" target="_blank" rel="external">https://support.apple.com/kb/PH18726?locale=zh_CN</a><br><a href="https://knowledge.autodesk.com/support/flame-products/troubleshooting/caas/sfdcarticles/sfdcarticles/Enabling-remote-SSH-login-on-Mac-OS-X.html" target="_blank" rel="external">https://knowledge.autodesk.com/support/flame-products/troubleshooting/caas/sfdcarticles/sfdcarticles/Enabling-remote-SSH-login-on-Mac-OS-X.html</a></p>
<p>参考：<br>polipo(<a href="http://library.zenlogic.com/ss/2014/05/10/shadowsocks-polipo-squid/" target="_blank" rel="external">http://library.zenlogic.com/ss/2014/05/10/shadowsocks-polipo-squid/</a>)</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="macosx__u8F6C_u5316socks5_u4EE3_u7406_u4E3Ahttp_u4EE3_u7406_u7684_u5DE5_u5177_3A"><a href="#macosx__u8F6C_u5316socks5_u4EE3_u7406_u4]]>
    </summary>
    
      <category term="tools, socks5，osx" scheme="http://silveringsea.github.io/tags/tools-socks5%EF%BC%8Cosx/"/>
    
      <category term="tools" scheme="http://silveringsea.github.io/categories/tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[python env]]></title>
    <link href="http://silveringsea.github.io/2015/12/18/python-env/"/>
    <id>http://silveringsea.github.io/2015/12/18/python-env/</id>
    <published>2015-12-18T00:29:49.000Z</published>
    <updated>2016-02-23T01:24:59.000Z</updated>
    <content type="html"><![CDATA[<p>brew install zoidbergwill/python/<formula><br>Or brew tap zoidbergwill/python and then brew install <formula>.<br>brew install python35<br>pyenv install –list</formula></formula></p>
<p>We don’t ever install to pip3, pyvenv, or python3, since we don’t know which Python version you want to use in general. Eventually I hope to add support for that somehow, though using pyenv might be a better solution.<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">brew install pyenv </span><br><span class="line">mvim .bash_profile</span><br><span class="line">export PYENV_ROOT=/usr/<span class="keyword">local</span>/opt/pyenv</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">which</span> pyenv &gt; /dev/null; then eval <span class="string">"$(pyenv init -)"</span>; fi  #上面的内容将改变Pyenv root path并确保pyenv被初始化。注意：.bash_profile文件中，上面两个语句的顺序一定不能颠倒：（如果颠倒的话，pyenv <span class="keyword">global</span>中的设置将会不起作用）</span><br><span class="line"><span class="label">$SHELL</span> -<span class="keyword">l</span></span><br><span class="line">pyenv install --<span class="keyword">list</span></span><br><span class="line">pyenv install 2.7.11 </span><br><span class="line">pyenv versions 查看当前可用的Python版本</span><br><span class="line">pyenv <span class="keyword">version</span> 查看当前使用的Python版本</span><br><span class="line">pyenv <span class="keyword">global</span> 查看当前的pyenv设置情况</span><br><span class="line">pyenv <span class="keyword">shell</span> </span><br><span class="line">pyenv: <span class="keyword">no</span> <span class="keyword">shell</span>-specific <span class="keyword">version</span> configured</span><br><span class="line">pyenv <span class="keyword">shell</span>中的Python版本设置只在当前的<span class="keyword">Shell</span>会话中有效 通过设置<span class="keyword">Shell</span>的PYENV_VERSION环境变量</span><br><span class="line">pyenv <span class="keyword">shell</span>中设置好Python版本后， 退出Terminal后，会自动还原为未设置的状态</span><br><span class="line">pyenv <span class="keyword">local</span>中设置的Python版本只对相应的当前目录有效 在目录中写入.python-<span class="keyword">version</span>文件</span><br><span class="line">pyenv <span class="keyword">global</span>中设置的Python版本对所有的<span class="keyword">Shell</span>全局有效，且退出后不会消失是通过设置/usr/<span class="keyword">local</span>/opt/pyenv/<span class="keyword">version</span>这个文件来实现的</span><br><span class="line">pyenv <span class="keyword">shell</span> system 设置<span class="keyword">Shell</span>中重新使用系统中Python版本</span><br><span class="line">pyenv <span class="keyword">shell</span> --unset  取消<span class="keyword">Shell</span>中的Python版本设置（恢复为默认状态）</span><br><span class="line">pyenv <span class="keyword">local</span>和pyenv <span class="keyword">shell</span>命令都有--unset参数，而pyenv <span class="keyword">global</span>命令没有--unset参数</span><br></pre></td></tr></table></figure></p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Sets <span class="operator">the</span> <span class="built_in">global</span> <span class="built_in">version</span> <span class="operator">of</span> Python <span class="built_in">to</span> be used <span class="operator">in</span> all shells </span><br><span class="line"><span class="keyword">by</span> writing <span class="operator">the</span> <span class="built_in">version</span> name <span class="built_in">to</span> <span class="operator">the</span> ~/.pyenv/<span class="built_in">version</span> <span class="built_in">file</span>. </span><br><span class="line">This <span class="built_in">version</span> can be overridden <span class="keyword">by</span> <span class="operator">an</span> application-specific .python-<span class="built_in">version</span> </span><br><span class="line"><span class="built_in">file</span>, <span class="operator">or</span> <span class="keyword">by</span> setting <span class="operator">the</span> PYENV_VERSION environment <span class="built_in">variable</span>.</span><br><span class="line">pyenv <span class="built_in">local</span></span><br><span class="line"></span><br><span class="line">Sets <span class="operator">a</span> <span class="built_in">local</span> application-specific Python <span class="built_in">version</span> </span><br><span class="line"><span class="keyword">by</span> writing <span class="operator">the</span> <span class="built_in">version</span> name <span class="built_in">to</span> <span class="operator">a</span> .python-<span class="built_in">version</span> <span class="built_in">file</span> </span><br><span class="line"><span class="operator">in</span> <span class="operator">the</span> current <span class="built_in">directory</span>. </span><br><span class="line">This <span class="built_in">version</span> overrides <span class="operator">the</span> <span class="built_in">global</span> <span class="built_in">version</span>, </span><br><span class="line"><span class="operator">and</span> can be overridden itself <span class="keyword">by</span> setting <span class="operator">the</span> PYENV_VERSION </span><br><span class="line">environment <span class="built_in">variable</span> <span class="operator">or</span> <span class="operator">with</span> <span class="operator">the</span> pyenv <span class="built_in">shell</span> <span class="command"><span class="keyword">command</span>.</span></span><br><span class="line">pyenv <span class="built_in">shell</span></span><br><span class="line"></span><br><span class="line">Sets <span class="operator">a</span> <span class="built_in">shell</span>-specific Python <span class="built_in">version</span> </span><br><span class="line"><span class="keyword">by</span> setting <span class="operator">the</span> PYENV_VERSION environment <span class="built_in">variable</span> <span class="operator">in</span> your <span class="built_in">shell</span>. </span><br><span class="line">This <span class="built_in">version</span> overrides application-specific versions <span class="operator">and</span> <span class="operator">the</span> <span class="built_in">global</span> <span class="built_in">version</span>.</span><br></pre></td></tr></table></figure>
<h5 id="PYTHONPATH"><a href="#PYTHONPATH" class="headerlink" title="PYTHONPATH"></a>PYTHONPATH</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 报错Your PYTHONPATH points to a site-packages dir for Python 2.x but you are running Python 3.x! ...</span></span><br><span class="line"><span class="built_in">unset</span> PYTHONPATH 可以解决， 检查PYTHONPATH路径</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>brew install zoidbergwill/python/<formula><br>Or brew tap zoidbergwill/python and then brew install <formula>.<br>brew install python35<b]]>
    </summary>
    
      <category term="python" scheme="http://silveringsea.github.io/tags/python/"/>
    
      <category term="settings" scheme="http://silveringsea.github.io/tags/settings/"/>
    
      <category term="python" scheme="http://silveringsea.github.io/categories/python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[linux config]]></title>
    <link href="http://silveringsea.github.io/2015/12/16/linux-config/"/>
    <id>http://silveringsea.github.io/2015/12/16/linux-config/</id>
    <published>2015-12-16T03:50:45.000Z</published>
    <updated>2016-02-22T15:09:21.000Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[linux config]]></title>
    <link href="http://silveringsea.github.io/2015/12/16/linux-create-record/"/>
    <id>http://silveringsea.github.io/2015/12/16/linux-create-record/</id>
    <published>2015-12-16T03:50:45.000Z</published>
    <updated>2016-02-22T15:11:40.000Z</updated>
    <content type="html"><![CDATA[<h3 id="u5982_u4F55_u67E5_u770B_u6240_u6709_u5206_u533A_u7684_u6587_u4EF6_u7CFB_u7EDF_u7C7B_u578B"><a href="#u5982_u4F55_u67E5_u770B_u6240_u6709_u5206_u533A_u7684_u6587_u4EF6_u7CFB_u7EDF_u7C7B_u578B" class="headerlink" title="如何查看所有分区的文件系统类型"></a>如何查看所有分区的文件系统类型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l</span><br></pre></td></tr></table></figure>
<h3 id="u7F51_u7EDC"><a href="#u7F51_u7EDC" class="headerlink" title="网络"></a>网络</h3><blockquote>
<p>centeos配置开机自动获取ip:<br> vi /etc/sysconfig/network-scripts/ifcfg-eth0 将ONBOOT=”no” 改成 “yes”<br>  serive network restart</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="u5982_u4F55_u67E5_u770B_u6240_u6709_u5206_u533A_u7684_u6587_u4EF6_u7CFB_u7EDF_u7C7B_u578B"><a href="#u5982_u4F55_u67E5_u770B_u6240_u]]>
    </summary>
    
      <category term="linux" scheme="http://silveringsea.github.io/tags/linux/"/>
    
      <category term="linux" scheme="http://silveringsea.github.io/categories/linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[nosql_test]]></title>
    <link href="http://silveringsea.github.io/2015/12/16/nosql-test/"/>
    <id>http://silveringsea.github.io/2015/12/16/nosql-test/</id>
    <published>2015-12-16T03:46:37.000Z</published>
    <updated>2016-02-22T15:11:40.000Z</updated>
    <content type="html"><![CDATA[<p>[YCSB测试框架]</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>[YCSB测试框架]</p>
]]>
    </summary>
    
      <category term="nosql" scheme="http://silveringsea.github.io/tags/nosql/"/>
    
      <category term="test" scheme="http://silveringsea.github.io/tags/test/"/>
    
      <category term="nosql" scheme="http://silveringsea.github.io/categories/nosql/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[zookeeper]]></title>
    <link href="http://silveringsea.github.io/2015/12/16/zookeeper-test/"/>
    <id>http://silveringsea.github.io/2015/12/16/zookeeper-test/</id>
    <published>2015-12-15T16:51:06.000Z</published>
    <updated>2016-02-22T15:11:40.000Z</updated>
    <content type="html"><![CDATA[<p>修改dataDir的myid为 各自的<br>集群<br>server.1=master:2888:3888<br>server.2=slave1:2888:3888<br>server.3=slave2:2888:3888<br>port1: 从机器（follower）连接到主机器（leader）的端口号<br>port2: leadership选举的端口号</p>
<p>./zkServer.sh start ../conf/zoo0.cfg</p>
<p>连接 bin/zkCli.sh -server slave1:2181</p>
<p>配置文件的说明：</p>
<p>tickTime ：基本事件单元，以毫秒为单位。这个时间是作为 Zookeeper 服务器之间或客户端与服务器之间维持心跳的时间间隔，也就是每个 tickTime 时间就会发送一个心跳。<br>dataDir ：存储内存中数据库快照的位置，顾名思义就是 Zookeeper 保存数据的目录，默认情况下，Zookeeper 将写数据的日志文件也保存在这个目录里。<br>clientPort ：这个端口就是客户端连接 Zookeeper 服务器的端口，Zookeeper 会监听这个端口，接受客户端的访问请求。<br>initLimit：这个配置项是用来配置 Zookeeper 接受客户端初始化连接时最长能忍受多少个心跳时间间隔数，当已经超过 5 个心跳的时间（也就是 tickTime）长度后 Zookeeper 服务器还没有收到客户端的返回信息，那么表明这个客户端连接失败。总的时间长度就是 5<em>2000=10 秒。<br>syncLimit：这个配置项标识 Leader 与 Follower 之间发送消息，请求和应答时间长度，最长不能超过多少个 tickTime 的时间长度，总的时间长度就是 2</em>2000=4 秒<br>server.A = B:C:D : A表示这个是第几号服务器,B 是这个服务器的 ip 地址；C 表示的是这个服务器与集群中的 Leader 服务器交换信息的端口；D 表示的是万一集群中的 Leader 服务器挂了，需要一个端口来重新进行选举，选出一个新的 Leader</p>
<ol>
<li>创建myid文件：<br>在集群模式下，需要通过myid来确定是哪一个server，上面配置的zoo.cfg中有一个值dataDir，在其指定的路径下新建一个文件myid</li>
</ol>
<p>该文件中只需要写入相应的A值，如在server.0，该值就应该是0</p>
<ol>
<li>执行运行脚本:<br>需要到不同的zookeeper路径下去执行 ./zkServer.sh start, 由于这种方式，导致我们没有配置相应的环境变量，存在找不到conf/路径的风险，所以在执行这个脚本的时候，最好能指定下配置文件的路径，如：</li>
</ol>
<p>./zkServer.sh start ../conf/zoo0.cfg</p>
<ol>
<li>附：按目录二结构进行搭建：<br>在ZK的目录下面新建3个data文件夹，每个文件夹中分别新建myid文件，同方式一。</li>
</ol>
<p>conf/ 路径下新建3个zoo.cfg 文件，每个文件的配置同目录一。</p>
<ol>
<li>注意的问题：</li>
<li>在启动./zkServer.sh start ../conf/zoo0.cfg，这时候去检查ZK，./zkCli.sh -server 10.20.151.34:2181，会出现这样的情况： java.net.ConnectException: Connection refused ，详细看下图。</li>
</ol>
<p>一、ZooKeeper简介</p>
<p>ZooKeeper作为分布式系统中重要的组件，目前在业界使用越来越广泛，ZooKeeper的使用场景非常多，以下是几种典型的应用场景：<br>l  数据发布与订阅(配置中心)<br>l  负载均衡<br>l  命名服务(Naming Service)<br>l  分布式通知/协调<br>l  集群管理与Master选举<br>l  分布式锁<br>zk环境搭建</p>
<p>这里不详细说明，提供详细blog说明。<br>Zookeeper集群搭建：<a href="http://www.cnblogs.com/linuxbug/p/4840137.html" target="_blank" rel="external">http://www.cnblogs.com/linuxbug/p/4840137.html</a><br>Zookeeper配置文件详解：<a href="http://www.cnblogs.com/linuxbug/p/4840136.html" target="_blank" rel="external">http://www.cnblogs.com/linuxbug/p/4840136.html</a><br>Zookeeper常用四字命令：<a href="http://www.cnblogs.com/linuxbug/p/4840135.html" target="_blank" rel="external">http://www.cnblogs.com/linuxbug/p/4840135.html</a><br>二、ZooKeeper监控</p>
<p>在部门内部，有不少应用已经强依赖ZooKeeper，ZooKeeper的工作状态直接影响它们的正常工作。先来看一看哪些因素对ZooKeeper正常工作有比较大的影响：</p>
<p>影响ZooKeeper工作的主要因素<br>l  用于zookeeper写事务日志的目录要有足够大小，并且强烈建议在单独的磁盘（挂载点）上，这是影响ZK性能最大因素之一。<br>l  连接数。<br>l  注册的Watcher数。<br>l  ZNode是否可读，可写。<br>l  ZK事件通知的延时是否过大。</p>
<p>针对监控平台的以上几点要求，部内内部选用了目前使用业界已经比较成熟的阿里开源ZooKeeper监控框架TaoKeeper。<br>TaoKeeper源码及搭建方法参考 <a href="https://github.com/alibaba/taokeeper" target="_blank" rel="external">https://github.com/alibaba/taokeeper</a></p>
<p>TaoKeeper介绍<br>TaoKeeper是阿里开源ZooKeeper监控告警框架，提供以下功能：<br>l  CPU/MEM/LOAD的监控<br>l  ZK日志目录所在磁盘剩余空间监控<br>l  单机连接数的峰值报警<br>l  单机 Watcher数的峰值报警<br>l  节点自检：是指对集群中每个IP所在ZK节点上的PATH: /YINSHI.MONITOR.ALIVE.CHECK 定期进行三次如下流程 : 节点连接 - 数据发布 - 修改通知 - 获取数据 - 数据对比, 在指定的延时内，三次流程均成功视为该节点处于正常状态。</p>
<p>工作原理<br>Taokeeper通过SSH连接到ZooKeeper部署的机器上，再在上面执行ZooKeeper的四字命令来得到统计信息，再分析保存到mysql数据库中。<br>监控目标机器的负载，也是通过SSH连接到目标机器，再执行top等命令，再分析得到数据。<br>常见四字命令：<br>l  echo stat|nc 127.0.0.1 2181 来查看哪个节点被选择作为follower或者leader<br>l  echo ruok|nc 127.0.0.1 2181 测试是否启动了该Server，若回复imok表示已经启动。<br>l  echo cons | nc 127.0.0.1 2181 列出所有连接到服务器的客户端的完全的连接/会话的详情。<br>l  echo wchs | nc 127.0.0.1 2181 列出服务器 watch 的详细信息。</p>
<p>注意事项<br>1 taokeeper通过ssh信道到访登录每台机器，需要打开ssh的password登陆方式，不然taokeeper运行时会出现authentication failed错误。打开方式如下：<br>l  对于contos机器(sshd版本为标准OpenSSL)：需要把sshd配置文件中(本机为/etc/ssh/sshd_config.l)中PasswordAuthentication变量设置成yes；<br>l  对于suse机器(sshd版本为SSH Secure Shell)：需要把sshd配置文件中(本机为/etc/ssh2/sshd2_config.l)中AllowedAuthentications变量加上password（AllowedAuthentications publickey,keyboard-interactive,password）；<br>2 监控的每台机器需要安装nc命令（suse中叫netcat，可以直接做个软链到nc）</p>
<p>使用TaoKeeper，目前已建立起部门内ZooKeeper的监控视图<br>ZooKeeper集群实时状态</p>
<p>三、ZooKeeper告警</p>
<p>TaoKeeper查看主要针对以下几个维度：<br>l  ZooKeeper宕机告警<br>l  单机连接数超过阀值告警<br>l  单机Watch数超过阀值告警<br>l  磁盘，CPU，内存超过阀值告警</p>
<p>或自己使用四字命令+nc写脚本去做告警也行，这里不再详述。</p>
<p><a href="http://blog.csdn.net/cruise_h/article/details/19046357" target="_blank" rel="external">http://blog.csdn.net/cruise_h/article/details/19046357</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>修改dataDir的myid为 各自的<br>集群<br>server.1=master:2888:3888<br>server.2=slave1:2888:3888<br>server.3=slave2:2888:3888<br>port1: 从机器（follower）连]]>
    </summary>
    
      <category term="java" scheme="http://silveringsea.github.io/tags/java/"/>
    
      <category term="zookeeper" scheme="http://silveringsea.github.io/tags/zookeeper/"/>
    
      <category term="java" scheme="http://silveringsea.github.io/categories/java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[macos linux shell difference]]></title>
    <link href="http://silveringsea.github.io/2015/12/15/macos-linux-shell-diff/"/>
    <id>http://silveringsea.github.io/2015/12/15/macos-linux-shell-diff/</id>
    <published>2015-12-15T03:02:55.000Z</published>
    <updated>2016-02-22T15:11:40.000Z</updated>
    <content type="html"><![CDATA[<h2 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h2><blockquote>
<p>linux: ls –fulltime<br>osx:     stat -l -t “%F %T %z” *         </p>
<blockquote>
<p>find . -maxdepth 1 -printf “%M %n %-6u %-6g %6s %TY-%Tm-%Td %TT %TZ %f\n”|sort -k 9<br>gfind . -maxdepth 1 -printf “%M %n %-6u %-6g %6s %TY-%Tm-%Td %TT %TZ %f\n”|sort -k 9<br>but without the sort, columns don’t line up and the nanoseconds aren’t included. Plus the syntax for file selection is different and other options for ls aren’t available or are different.<br>In Mac OSX, gfind is needed (brew install gfind) (and note that the granularity will only be in whole seconds):</p>
</blockquote>
</blockquote>
<h2 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h2><p>netstat -tunlp vs lsof -ni | grep LISTEN / netstat -anL<br>OS X has a netstat command, but it doesn’t display information about the programs associated with the network connections. If you want to see that, you need to use lsof instead. Note that it must be run as root (i.e. with sudo) in order to see other users’ programs:<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo lsof -i</span><br><span class="line">lsof also has many options <span class="keyword">for</span> controlling what<span class="string">'s displayed:</span><br><span class="line">sudo lsof -i tcp -nP   # show TCP unly (no UDP), and don'</span>t translate IP addrs <span class="keyword">and</span> ports numbers to names</span><br><span class="line">sudo lsof -i <span class="number">6</span>tcp -stcp:<span class="keyword">listen</span>   <span class="comment"># show only IPv6 TCP ports in the listen state</span></span><br><span class="line">sudo lsof -i <span class="variable">@10</span>.<span class="number">11.12</span>.<span class="number">13</span>   <span class="comment"># show only connections to/from 10.11.12.13</span></span><br></pre></td></tr></table></figure></p>
<p>shadowsocks:<br><a href="https://blog.phpgao.com/shadowsocks_on_linux.html" target="_blank" rel="external">https://blog.phpgao.com/shadowsocks_on_linux.html</a></p>
<h2 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h2><p>macos下用 <a href="http://github.com/angryziber/ipscan/releases/download/3.4/ipscan-mac-3.4.zip" target="_blank" rel="external">ipscan-mac</a><br><a href="http://angryip.org/download/#mac" target="_blank" rel="external">http://angryip.org/download/#mac</a><br>If you’re using nmap, MAC addresses are only available if you’re on the same network segment as the target. Newer versions of nmap will only show the MAC address to you if you’re running as root.<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo nmap -sP -n <span class="number">192.168</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">24</span></span><br><span class="line">Use snmp-interfaces.nse lua script to get the MAC address of remote mashine like <span class="keyword">this</span>:</span><br><span class="line">nmap -sU -p <span class="number">161</span> -T4 -d -v -n -Pn --script snmp-interfaces <span class="number">80.234</span><span class="number">.33</span><span class="number">.182</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h2><blockquote>
<p>linux: ls –fulltime<br>osx:     stat -l -t “%F %T %z” *  ]]>
    </summary>
    
      <category term="osx, linux" scheme="http://silveringsea.github.io/tags/osx-linux/"/>
    
      <category term="shell" scheme="http://silveringsea.github.io/categories/shell/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[git usage]]></title>
    <link href="http://silveringsea.github.io/2015/12/14/git-usage/"/>
    <id>http://silveringsea.github.io/2015/12/14/git-usage/</id>
    <published>2015-12-14T07:42:10.000Z</published>
    <updated>2016-02-22T15:11:40.000Z</updated>
    <content type="html"><![CDATA[<h3 id="u914D_u7F6Essh"><a href="#u914D_u7F6Essh" class="headerlink" title="配置ssh"></a>配置ssh</h3><p>#生成key<br>$ ssh-keygen -t rsa -C “your email”</p>
<p>#添加已有的key<br>ssh-add -K [path/to/your/ssh-key]</p>
<h4 id="u591A_u4E2Assh_key"><a href="#u591A_u4E2Assh_key" class="headerlink" title="多个ssh key"></a>多个ssh key</h4><p>git config user.name “用户名”<br>git config user.email “邮箱”</p>
<p>#生成ssh key时同时指定保存的文件名<br>ssh-keygen -t rsa -f ~/.ssh/id_rsa.sohu -C “email”</p>
<p>#测试是否可以连接<br>ssh -T git@github.com<br>ssh -T -p 443 git@ssh.github.com</p>
<p>#ssh config的格式<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Host</span><br><span class="line">	User github<span class="class">.com-xxx</span></span><br><span class="line">	Hostname github<span class="class">.com</span></span><br><span class="line">	PreferredAuthentications publickey</span><br><span class="line">	IdentityFile ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure></p>
<h4 id="u4FEE_u6539-git_u6587_u4EF6_u5939_u4E0Bconfig_u4E2D_u7684url_u3002"><a href="#u4FEE_u6539-git_u6587_u4EF6_u5939_u4E0Bconfig_u4E2D_u7684url_u3002" class="headerlink" title="修改.git文件夹下config中的url。"></a>修改.git文件夹下config中的url。</h4><p>修改前<br>    [remote “origin”]<br>    url = <a href="https://github.com/humingx/humingx.github.io.git" target="_blank" rel="external">https://github.com/humingx/humingx.github.io.git</a><br>    fetch = +refs/heads/<em>:refs/remotes/origin/</em><br>修改后</p>
<pre><code>[remote &quot;origin&quot;]
url = git@github.com:humingx/humingx.github.io.git
fetch = +refs/heads/*:refs/remotes/origin/*
</code></pre><h3 id="u6B65_u9AA4"><a href="#u6B65_u9AA4" class="headerlink" title="步骤"></a>步骤</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#git init的时候 创建了.git</span></span><br><span class="line">git init</span><br><span class="line">git remote add origin git@xxx.org:username/xxx.git</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加文件到git index(即暂存区域)， 这个时候 创建了.git下的 index ， objects</span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment">#提交并且加注释 这时候创建 .git/refs/heads/master</span></span><br><span class="line">git commit -am <span class="string">"init"</span> </span><br><span class="line"><span class="comment">#推送 这时候会修改 .git/config 创建 .git/refs/heads/remotes</span></span><br><span class="line">git push -u origin <span class="keyword">master</span></span><br><span class="line"></span><br><span class="line"><span class="title"># 将本地修改提交到远程到master</span>：</span><br><span class="line"><span class="number">1</span>、提交修改：git add 文件路径/文件名</span><br><span class="line"><span class="number">2</span>、git commit -m 修改注释</span><br><span class="line"><span class="number">3</span>、git stash 修改过的被追踪的文件和暂存的变更——并将它保存到一个未完结变更的堆栈中，随时可以重新应用。</span><br><span class="line"><span class="number">4</span>、git pull</span><br><span class="line"><span class="number">5</span>、git stash pop stash 恢复储藏的工作</span><br><span class="line"><span class="number">6</span>、git push</span><br><span class="line"><span class="comment"># 步骤3--5 是防止在提交过程中和远程文件发生冲突。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 类似svn export的功能</span></span><br><span class="line">git archive <span class="keyword">master</span> <span class="title">|tar</span> -x -C /path</span><br><span class="line">git archive <span class="keyword">master</span> <span class="title">|bzip2</span> &gt; xxxx.bz2</span><br><span class="line">git archive --format zip --output /xxxx.zip <span class="keyword">master</span></span><br><span class="line"><span class="title">git</span> help archive</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增分支并切换过去</span></span><br><span class="line">git checkout -b frag/deployment  <span class="comment"># 这个时候 .git/index .git/HEAD 会修改</span></span><br></pre></td></tr></table></figure>
<h3 id="u89E3_u5256"><a href="#u89E3_u5256" class="headerlink" title="解剖"></a>解剖</h3><p>Git 会创建一个 .git 目录, 这个目录<br><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ ls</span><br><span class="line">HEAD    <span class="preprocessor">#指向当前分支</span></span><br><span class="line">branches/ 	<span class="preprocessor"># 新版本的 Git 不再使用</span></span><br><span class="line">config  		<span class="preprocessor"># 项目特有的配置选项</span></span><br><span class="line">description 	<span class="preprocessor"># 仅供 GitWeb 程序使用</span></span><br><span class="line">hooks/		<span class="preprocessor">#客户端或服务端钩子脚本。</span></span><br><span class="line"><span class="keyword">index</span>	<span class="preprocessor"># 保存了暂存区域信息 实际上就是一个包含文件索引的目录树，像是一个虚拟的工作区。在这个虚拟工作区的目录树中，记录了文件名、文件的状态信息（时间戳、文件长度等）</span></span><br><span class="line">info/    <span class="preprocessor"># 保存了一份不希望在 .gitignore 文件中管理的忽略模式 (ignored patterns) 的全局可执行文件。</span></span><br><span class="line">objects/		<span class="preprocessor"># 存储所有数据内容</span></span><br><span class="line">refs/				<span class="preprocessor"># 存储指向数据 (分支) 的提交对象的指针</span></span><br><span class="line">HEAD 及 <span class="keyword">index</span> 文件，objects 及 refs 目录。这些是 Git 的核心部分</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>.git/refs 目录下有三个子目录：</p>
<p>heads 保存本地的分支   比如master/deploy/release  master内柔是串文本，指向了一个 Commit 对象<br>remotes 保存远程仓库的分支<br>tags 保存所有的 tag<br><a href="http://mednoter.com/git-branch.html" target="_blank" rel="external"><img src="http://mednoter.com/media/files/2014/Aug/11-branch-mindmap.png" alt="参考"></a></p>
</blockquote>
<h3 id="u8BE6_u89E3"><a href="#u8BE6_u89E3" class="headerlink" title="详解"></a>详解</h3><p>底层命令plumbing:  Unix风格的：checkout, branch, remote 等共约 30 个 Git 命令<br>高层命令Porcelain </p>
<p>git add files 把当前文件放入暂存区域。<br>git commit 给暂存区域生成快照并提交。<br>git reset – files 用来撤销最后一次git add files，你也可以用git reset 撤销所有暂存区域文件。<br>git checkout – files 把文件从暂存区域复制到工作目录，用来丢弃本地修改。 会用暂存区全部或指定的文件替换工作区的文件。这个操作很危险，会清除工作区中未添加到暂存区的改动&lt;`</p>
<pre><code>&gt;                                -- History ---
</code></pre><p>git reset –file        ^|             | git commit<br>                                            — Stage —-<br>    git checkout            ^|                             |  git add files<br>                                            ____Working—-<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">git commit -a 相当于运行 git add 把所有当前目录下的文件加入暂存区域再运行。git commit.</span><br><span class="line">git commit files 进行一次包含最后一次提交加上工作目录中文件快照的提交。并且文件被添加到暂存区域。</span><br><span class="line">git checkout HEAD <span class="xml"><span class="tag">&lt;<span class="title">files</span>&gt;</span></span> 回滚到复制最后一次提交。 会用 HEAD 指向的 master 分支中的全部或者部分文件替换暂存区和以及工作区中的文件。这个命令也是极具危险性的，因为不但会清除工作区中未提交的改动，也会清除暂存区中未提交的改 动。</span><br><span class="line">git rm --cached <span class="xml"><span class="tag">&lt;<span class="title">file</span>&gt;</span></span>" 命令时，会直接从暂存区删除文件</span><br><span class="line"></span><br><span class="line">[<span class="link_label">Display_Text</span>](<span class="link_url">https://marklodato.github.io/visual-git-guide/conventions.svg</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="header">### 进阶</span></span><br><span class="line">简单理解：</span><br><span class="line">工作区（Working Directory):  即操作的文件</span><br><span class="line">暂存区 (Stage Index):  即 .git/index保存的目录树 和 对应的 .git/objects里面保存的数据</span><br><span class="line">版本仓库/对象库（History) :  即 .git/refs/master 和其对应内容</span><br><span class="line"></span><br><span class="line"><span class="blockquote">&gt; git对象</span></span><br></pre></td></tr></table></figure></p>
<pre><code>echo &apos;test content&apos; | git hash-object -w --stdin
find .git/objects -type f
git cat-file -p d670460b4b4aece5915caf5c68d12f560a9fe3e4
git cat-file -t fdf4fc3
<figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&gt; <span class="built_in">tree</span> 对象对应于 UNIX 中的目录 一个单独的 <span class="built_in">tree</span> 对象包含一条或多条 <span class="built_in">tree</span> 记录 一个单独的 <span class="built_in">tree</span> 对象包含一条或多条 <span class="built_in">tree</span> 记录，每一条记录含有一个指向 blob 或子 <span class="built_in">tree</span> 对象的 SHA-<span class="number">1</span> 指针，并附有该对象的权限模式 (<span class="built_in">mode</span>)、类型和文件名信息</span><br><span class="line">就是一大坨指针</span><br></pre></td></tr></table></figure>

# 用这个命令可以看到tree对象
git cat-file -p master^{tree}
</code></pre><p>100644 blob 9f0bc480dad89d2ef1f9983b39554c85eb0d3e79    README<br>    ```<br>    <img src="http://mednoter.com/media/files/2014/jul/29-2-tree.png" alt="Some_Text"></p>
<blockquote>
<p>blob 对象则大致对应于 inodes 或文件内容<br>    <img src="http://mednoter.com/media/files/2014/jul/29-object-blob.png" alt="Some_Text"><br>Commit 对象<br>一个 commit 对象由以下几部分组成<br>作者<br>提交者<br>注释<br>指向一个 big tree 的指针<br><img src="http://mednoter.com/media/files/2014/jul/29-object-commit.png" alt="Some_Text"></p>
</blockquote>
<p>怎么理解暂存区 ？ <a href="http://www.worldhello.net/2010/11/30/2166.html" target="_blank" rel="external">http://www.worldhello.net/2010/11/30/2166.html</a><br><a href="http://iissnan.com/progit/html/zh/ch9_2.html" target="_blank" rel="external">http://iissnan.com/progit/html/zh/ch9_2.html</a></p>
<p><a href="http://iissnan.com/progit/html/zh/ch9_2.html" target="_blank" rel="external">Git内部原理</a><br><a href="http://www.worldhello.net/2010/11/30/2166.html" target="_blank" rel="external">http://www.worldhello.net/2010/11/30/2166.html</a></p>
<p>参考<br><a href="http://riny.net/2014/git-ssh-key/" target="_blank" rel="external">http://riny.net/2014/git-ssh-key/</a><br><a href="https://segmentfault.com/q/1010000000835302" target="_blank" rel="external">https://segmentfault.com/q/1010000000835302</a><br><a href="http://riny.net/2014/git-ssh-key/" target="_blank" rel="external">http://riny.net/2014/git-ssh-key/</a><br><a href="http://www.cnblogs.com/hero4china/p/windows_git.html" target="_blank" rel="external">http://www.cnblogs.com/hero4china/p/windows_git.html</a><br><a href="http://mednoter.com/git-object.html" target="_blank" rel="external">http://mednoter.com/git-object.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="u914D_u7F6Essh"><a href="#u914D_u7F6Essh" class="headerlink" title="配置ssh"></a>配置ssh</h3><p>#生成key<br>$ ssh-keygen -t rsa -C “your e]]>
    </summary>
    
      <category term="git, developemnt tools" scheme="http://silveringsea.github.io/tags/git-developemnt-tools/"/>
    
      <category term="git" scheme="http://silveringsea.github.io/categories/git/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[security config]]></title>
    <link href="http://silveringsea.github.io/2015/12/14/security-config/"/>
    <id>http://silveringsea.github.io/2015/12/14/security-config/</id>
    <published>2015-12-14T04:32:41.000Z</published>
    <updated>2016-02-22T15:11:40.000Z</updated>
    <content type="html"><![CDATA[<h2 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h2><p> iptables的工作流程大体上可以表达为三种 </p>
<p>源地址发送数据–&gt; {PREROUTING–&gt;路由规则–&gt;POSTROUTING} –&gt;目的地址接收到数据<br>源地址发送数据–&gt; {PREROUTING–&gt;INPUT–&gt;本机}<br> {本机–&gt;OUTPUT–&gt;POSTROUTING} –&gt;目的地址接收到数据<br>不考虑地址转发的情况下，例如一台独立的主机的网络管理，我们只需要配置INPUT和OUTPUT两条链即可完成对网络的管理<br>实例<br>iptables<br> -L  查看<br> -F  清除所有规则<br> -X  清除自定义链<br> -Z  清除所有链统计<br>-n的含义是用ip和端口的方式来显示规则</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> iptables -t filter -L -n   查看filter表中的所有规则 </span><br><span class="line"> iptables -t filter -F  清空filter表中的规则 </span><br><span class="line">首先要牢记iptables是有链 有表的结构 ， 那么定义每一条链上的每一条表的默认规则的格式为</span><br><span class="line">iptables -t 表 -P 链  动作类型 </span><br><span class="line">-t 就不说了 -P 这里要大写  链的名称也是大小写敏感的注意不要写错  动作类型有ACCEPT允许通过 DROP丢弃 也就是禁止 还有一种动作是LOG作为日志记录，目前我还没有用过。</span><br><span class="line"> iptables -t filter -P INPUT ACCEPT  <span class="preprocessor">#设置INPUT链上filter表默认规则</span></span><br><span class="line"></span><br><span class="line">这里要注意的是，默认允许了所有的链接都可以通过，到达服务器。这样的设置在正式生产服务器环境上是十分危险的，不建议这么设置，应当设置为DROP，但是默认允许所有的链接都禁止的后果就是把自己的远程操作也踢掉了，服务器在本地还无所谓，但是在远程这就麻烦了。于是要牢记，默认规则要在设置好自己访问的规则以后再设置，最好是在最后设置。</span><br><span class="line"> iptables -A INPUT -i eth0 -s <span class="number">192.168</span><span class="number">.1</span><span class="number">.110</span> -j DROP  <span class="preprocessor">#禁止ip为<span class="number">192.168</span><span class="number">.1</span><span class="number">.110</span>的计算机访问本机eth0网卡</span></span><br><span class="line"> iptables -A OUTPUT -o eth0 -d <span class="number">192.168</span><span class="number">.1</span><span class="number">.110</span> -j DROP  禁止本机访问<span class="number">192.168</span><span class="number">.1</span><span class="number">.110</span>可以这么写 </span><br><span class="line"> iptables -A INPUT -i lo -j ACCEPT 允许本机访问本地回环网卡 localhost </span><br><span class="line">iptables -A OUTPUT -o lo -j ACCEPT  </span><br><span class="line"> iptables -A INPUT -i eth0 -s <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span>/<span class="number">24</span> -j DROP  禁止<span class="number">192.168</span><span class="number">.1</span>.xxx 这个网段所有的IP访问本机，<span class="number">24</span>其实指的是二进制的从左到右 有<span class="number">24</span>个<span class="number">1</span> ，在IPV4的ip地址表示方法下 有<span class="number">32</span>位，那么<span class="number">32</span>-<span class="number">24</span>=<span class="number">8</span> 也就是十进制IP最后一段位置代表是<span class="number">0</span>  </span><br><span class="line">iptables  -A  链 -io 网卡 -p 协议  -s 源ip  --sport  源端口  -d  目标ip  --dport  目标端口  -j  动作 </span><br><span class="line">和IP一样 链的不同（可能是INPUT也可能是OUTPUT） 使用不同的-i或者-o</span><br><span class="line">-p是小写的。 代表协议，类型可以是tcp、udp、icmp或者all，特别是要注意的是我们平时使用的ping命令 其实是icmp协议，而这个协议比较特殊，不使用端口 所以在使用all的时候（包含icmp）同时设置端口可能会出错！</span><br><span class="line">INPUT要有源，OUTPUT要有目标，但是INPUT往往是限制目标端口，OUTPUT往往是限制源端口，注意逻辑不要乱。 </span><br><span class="line"> iptables -A INPUT -p tcp --dport <span class="number">80</span> -j ACCEPT  <span class="preprocessor"># web服务器添加<span class="number">80</span>服务 </span></span><br><span class="line"> iptables -A INPUT -p tcp -s <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span>/<span class="number">24</span> --dport <span class="number">3306</span> -j ACCEPT  允许<span class="number">192.168</span><span class="number">.1</span>.x网段访问mysql数据库</span><br><span class="line">iptables -I INPUT <span class="number">1</span> -p tcp --dport <span class="number">80</span> -j ACCEPT  <span class="preprocessor"># <span class="number">1</span>代表了第一位顺序 也就是最优先的匹配规则</span></span><br></pre></td></tr></table></figure>
<p>有多条规则匹配一次访问的时候，以最前面的规则为准，当无法匹配到对应规则的时候，使用默认规则<br>开机自启动<br> chkconfig iptables on<br> service iptables save<br>上面的命令其实是把规则保存在/etc/sysconfig/iptables文件中，重启会自动读取<br>如果是业务相对固定的服务器这样做无所谓，但如果需要经常切换规则，那么讲规则都写在这一个文件中并不是十分容易管理<br>可以把规则写成单独的文件，在开机的时候自动载入（/etc/rc.local中添加），但是要注意权限设置（755），这样做的好处是便于管理，缺点是只有开机的时候有效<br>如果是重启防火墙服务，则无法载入对应规则。</p>
<h2 id="mac_u4E0B_uFF0C__u4EE5_u524D_u7528_u7684_u662Fipsw_2C__u73B0_u5728_u7528_u7684_u662Fpf"><a href="#mac_u4E0B_uFF0C__u4EE5_u524D_u7528_u7684_u662Fipsw_2C__u73B0_u5728_u7528_u7684_u662Fpf" class="headerlink" title="mac下， 以前用的是ipsw, 现在用的是pf"></a>mac下， 以前用的是ipsw, 现在用的是pf</h2><p>Port Forwarding in Mavericks<br>Since Mavericks stopped using the deprecated ipfw (as of Mountain Lion), we’ll be using pf to allow port forwarding.</p>
<ol>
<li>anchor file<br>Create an anchor file under /etc/pf.anchors/<anchor file=""> with your redirection rule like:<br>rdr pass on lo0 inet proto tcp from any to 127.0.0.2 port 80 -&gt; 127.0.0.1 port 40070</anchor></li>
<li>Test the anchor file<br>Parse and test your anchor file to make sure there are no errors:<br>sudo pfctl -vnf <anchor file=""></anchor></li>
<li>Reference the anchor in pf.conf<br>/etc/pf.conf is the main configuration file that pf loads at boot. We’ll need to load the anchor file we previously created:<br>rdr-anchor “forwarding”<br>load anchor “forwarding” from “/etc/pf.anchors/<anchor file="">“<br>Make sure to add these entries to the appropriate spot.</anchor></li>
<li>Load and enabling pf<br>pf is not enabled by default in Mavericks, few ways to enable this:<br>Manually load and enable from a pf.conf file via sudo pfctl -ef <pf.conf file=""><br>Auto enable by creating a launch daemon via this doc to run pfctl -ef <pf.conf file=""> on boot.<br>Auto enable by adding an -e(enable) to the pfctl ProgramArgument in /System/Library/LaunchDaemons/com.apple.pfctl.plist like this:<br><key>ProgramArguments</key><array><br><string>pfctl</string><br><string>-e</string><br><string>-f</string><br><string>/etc/pf.conf</string><br></array></pf.conf></pf.conf></li>
<li>Forwarding across interfaces<br>By default, pf does not forward between interfaces. Here’s a snippet from man for pfctl with help from 2sidedfigure:<br>The packet filter does not itself forward packets between interfaces.  Forwarding can be enabled by setting the sysctl(8) variables net.inet.ip.forwarding and/or net.inet6.ip6.forwarding to 1.  Set them permanently in sysctl.conf(5).<br>We’ll need to enable this by adding to /etc/sysctl.conf:<br>net.inet.ip.forwarding=1<br>net.inet6.ip6.forwarding=1<br>There is the possibility that pf.conf will be overriden with updates to the OS. It might be best to create your own pf config file and load them in additon to the main pf.conf to prevent this.</li>
</ol>
<p>ref:<br><a href="https://gist.github.com/kujohn/7209628" target="_blank" rel="external">https://gist.github.com/kujohn/7209628</a><br><a href="https://gist.github.com/zhoutong/8adca7038639f0f5fb0e" target="_blank" rel="external">https://gist.github.com/zhoutong/8adca7038639f0f5fb0e</a><br><a href="http://blog.csdn.net/dog250/article/details/8944111" target="_blank" rel="external">http://blog.csdn.net/dog250/article/details/8944111</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h2><p> iptables的工作流程大体上可以表达为三种 </p>
<p>源地址发送数据–&gt; ]]>
    </summary>
    
      <category term="linux" scheme="http://silveringsea.github.io/tags/linux/"/>
    
      <category term="shell" scheme="http://silveringsea.github.io/tags/shell/"/>
    
      <category term="linux" scheme="http://silveringsea.github.io/categories/linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[markdown入门和进阶]]></title>
    <link href="http://silveringsea.github.io/2015/12/12/mastering-markdown/"/>
    <id>http://silveringsea.github.io/2015/12/12/mastering-markdown/</id>
    <published>2015-12-12T13:14:57.000Z</published>
    <updated>2016-02-22T15:11:40.000Z</updated>
    <content type="html"><![CDATA[<h3 id="u7F16_u8F91_u5668"><a href="#u7F16_u8F91_u5668" class="headerlink" title="编辑器"></a>编辑器</h3><p>由于使用sublime，因此博主使用的是sublime的插件ominiMarkupPreviewer进行编辑</p>
<ol>
<li><p>在线</p>
<blockquote>
<ul>
<li><a href="https://www.zybuluo.com/mdeditor" title="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">Cmd - 在线 Markdown 编辑阅读器</a><ul>
<li><a href="http://www.jianshu.com/" target="_blank" rel="external">http://www.jianshu.com/</a></li>
<li><a href="http://stackedit.io/" target="_blank" rel="external">http://stackedit.io/</a></li>
</ul>
</li>
</ul>
</blockquote>
</li>
<li><p>本地</p>
<blockquote>
<ul>
<li><a href="https://markdownpad.com/" title="https://markdownpad.com/" target="_blank" rel="external">MarkdownPad</a>、 </li>
<li><a href="http://www.sum16.com/resource/markdownpad-2-pro-key.html" target="_blank" rel="external">MarkdownPad 2 Pro 注册码</a></li>
<li><a href="http://www.open-open.com/news/view/1be6464" title="http://www.open-open.com/news/view/1be6464" target="_blank" rel="external">实用的 Markdown 编辑器和工具</a></li>
</ul>
</blockquote>
</li>
</ol>
<h3 id="u5E38_u7528_u8BED_u6CD5_u901F_u67E5"><a href="#u5E38_u7528_u8BED_u6CD5_u901F_u67E5" class="headerlink" title="常用语法速查"></a>常用语法速查</h3><ol>
<li><p>标题 (Headings)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是 H1 &lt;一级标题&gt;</span></span><br><span class="line"><span class="comment">## 这是 H2 &lt;二级标题&gt;</span></span><br><span class="line"><span class="comment">###### 这是 H6 &lt;六级标题&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>文字格式 (Styling text)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">**这是文字粗体格式**</span><br><span class="line">*这是文字斜体格式*</span><br><span class="line">_这是文字粗斜体格式_</span><br><span class="line">~~在文字上添加删除线~~</span><br></pre></td></tr></table></figure>
<p> <strong>这是文字粗体格式</strong><br> <em>这是文字斜体格式</em><br> <em>这是文字粗斜体格式</em><br> <del>在文字上添加删除线</del></p>
</li>
<li><p>列表 (List)</p>
<ul>
<li><p>无序列表</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* 项目<span class="number">1</span></span><br><span class="line">* 项目<span class="number">2</span></span><br><span class="line">* 项目<span class="number">3</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>有序列表</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 项目<span class="number">1</span></span><br><span class="line"><span class="number">2</span>. 项目<span class="number">2</span></span><br><span class="line"><span class="number">3</span>. 项目<span class="number">3</span></span><br><span class="line">   * 项目<span class="number">1</span></span><br><span class="line">   * 项目<span class="number">2</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>引用 (Blockquotes)</p>
 <figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#可以不用每行都写一个</span></span><br><span class="line">&gt; <span class="constant">Pardon</span> my french</span><br><span class="line"><span class="comment">#可以嵌套</span></span><br><span class="line"><span class="prompt">&gt;&gt;</span> asdfasdf</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Pardon my french</p>
<pre><code>Echo1 Here
</code></pre><blockquote>
<p>asdfasdf</p>
</blockquote>
</blockquote>
</li>
<li><p>段落缩进</p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&amp;ensp;或&amp;<span class="comment">#8194;半方大的空白</span></span><br><span class="line">&amp;emsp;或&amp;<span class="comment">#8195;全方大的空白</span></span><br><span class="line">不断行的空白格&amp;nbsp;或&amp;<span class="comment">#160;不断行的空白格</span></span><br></pre></td></tr></table></figure>
<p> &ensp;&#8194;段落:半方大的空白<br> &emsp;&#8195;段落:全方大的空白<br> 不断行的空白格&nbsp;&nbsp;不断行的空白格</p>
</li>
<li><p>github特有的markdown格式<br> <a href="https://guides.github.com/features/mastering-markdown/" target="_blank" rel="external">https://guides.github.com/features/mastering-markdown/</a><br> <a href="https://help.github.com/articles/github-flavored-markdown" target="_blank" rel="external">https://help.github.com/articles/github-flavored-markdown</a><br> <a href="https://help.github.com/articles/writing-on-github" target="_blank" rel="external">https://help.github.com/articles/writing-on-github</a><br> 比如 emoji: :sparkles: :camel: :boom:</p>
<ul>
<li>[x] This is a complete item</li>
<li>[ ] This is an incomplete item<br><a href="https://github.com/sergiolepore/hexo-tag-emojis" title="https://github.com/sergiolepore/hexo-tag-emojis" target="_blank" rel="external">hexo中使用emoji</a>  <figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% emoji heart <span class="number">32</span> custom_class1,custom_class2 <span class="envvar">%&#125;</span><br><span class="line">&#123;%</span> emoji-block %&#125;</span><br><span class="line">Lo<span class="comment">rem ipsum dolor sit amet :smiley:</span></span><br><span class="line">consectetur  adipisicing elit :boom: </span><br><span class="line">&#123;% endemoji-block %&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>图像</p>
 <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="link_label">example</span>](<span class="link_url">http://leanote.com/public/upload/528/5467be5d38f411286b00007b/images/logo/bbd3593e5c2bd29e129c0eb740193969.jpeg</span>)</span><br></pre></td></tr></table></figure>
<p> <img src="http://leanote.com/public/upload/528/5467be5d38f411286b00007b/images/logo/bbd3593e5c2bd29e129c0eb740193969.jpeg" alt="example"></p>
<p> 图片居中</p>
 <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="header">#上面加一个</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">style</span>=<span class="value">"text-align:center"</span> <span class="attribute">markdown</span>=<span class="value">"1"</span>&gt;</span></span></span><br><span class="line">![<span class="link_label">example</span>](<span class="link_url">http://leanote.com/public/upload/528/5467be5d38f411286b00007b/images/logo/bbd3593e5c2bd29e129c0eb740193969.jpeg</span>)</span><br></pre></td></tr></table></figure>
<p> <div style="text-align:center" markdown="1"><br> <img src="http://leanote.com/public/upload/528/5467be5d38f411286b00007b/images/logo/bbd3593e5c2bd29e129c0eb740193969.jpeg" alt="example"></div></p>
<p> 如果拷贝了别人的图片插入到自己的博客中，最好在图片上给出一个超链接指向源头，方便追溯出处。</p>
 <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="link_label">![example</span>](<span class="link_url">http://leanote.com/public/upload/528/5467be5d38f411286b00007b/images/logo/bbd3593e5c2bd29e129c0eb740193969.jpeg "haroopad"</span>)](<span class="link_url">http://blog.leanote.com/post/freewalk/Markdown-语法手册</span>)</span><br></pre></td></tr></table></figure>
<p> <a href="http://blog.leanote.com/post/freewalk/Markdown-语法手册" target="_blank" rel="external"><img src="http://leanote.com/public/upload/528/5467be5d38f411286b00007b/images/logo/bbd3593e5c2bd29e129c0eb740193969.jpeg" alt="example"></a></p>
</li>
<li><p>链接</p>
<ul>
<li><p>自动式</p>
  <figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="string">http:</span><span class="comment">//example.com/&gt;</span></span><br></pre></td></tr></table></figure>
<p>  <a href="http://example.com/" target="_blank" rel="external">http://example.com/</a></p>
</li>
<li><p>行内式</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="link_label">Display_Text</span>](<span class="link_url">http://example.com/ "http://example.com/"</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><p>参考式</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">我经常去的几个网站[<span class="link_label">Leanote</span>][<span class="link_reference">1</span>] </span><br><span class="line">[<span class="link_label">Leanote 笔记</span>][<span class="link_reference">1</span>]</span><br></pre></td></tr></table></figure>
</li>
<li><p>锚点<br>  用普通的html</p>
  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#end"</span>&gt;</span>bookmark_text<span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>  效果： <a href="#end">bookmark_text</a></p>
</li>
</ul>
</li>
<li><p>注脚 <sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>
 <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">注脚与注脚之间必须空一行，不然会失效</span><br><span class="line">使用 Markdown[^<span class="number">1</span>]可以效率的书写文档, 直接转换成 HTML[^<span class="number">2</span>], 你可以使用 Leanote[^Le] 编辑器进行书写。</span><br><span class="line"></span><br><span class="line">被添加脚注的词条后面会出现一个超链接数字（有的渲染为上标格式），点击数字跳转到文末 glossary 区域该脚注的定义处。文末 glossary 区域该脚注定义的行尾会添加一个回车符号（↵），点击可回到被标注的脚注点。</span><br><span class="line"></span><br><span class="line">测试 Hexo3<span class="number">.0</span> 有些主题不支持footnote， 可以参考&lt;http:<span class="comment">//nsfw.hjwu.me/2014-07-07/hexo-plugin-for-parse-footnotes/&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>嵌入代码</p>
<blockquote>
<p>单行的时候用 `asdf`<br>多行的时候用 </p>
<blockquote>
<p>```<br>aaaaaa<br>```</p>
</blockquote>
</blockquote>
<p>比如 </p>
<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">Here's an idea:</span> why don't we take <span class="escape">`S</span>uperiorProject<span class="escape">` </span><span class="literal">and</span> turn it into <span class="escape">`*</span>*Reasonable**Project<span class="escape">`.</span></span><br></pre></td></tr></table></figure>
<p>Here’s an idea: why don’t we take <code>SuperiorProject</code> and turn it into <code>**Reasonable**Project</code>.</p>
<p>嵌入代码里面用反引号怎么办？ <a href="http://daringfireball.net/projects/markdown/syntax#code" target="_blank" rel="external">参考这里</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">A single backtick <span class="keyword">in</span> a code span: `` ` ``</span><br><span class="line"></span><br><span class="line">A backtick-delimited string <span class="keyword">in</span> a code span: `` `foo` ``</span><br><span class="line"></span><br><span class="line">`&amp;<span class="comment">#8212;` is the decimal-encoded equivalent of `&amp;mdash;`.</span></span><br><span class="line"></span><br><span class="line">``git archive master --format=zip ＞ `git describe master`.zip``</span><br></pre></td></tr></table></figure>
<p>会得到：<br>A single backtick in a code span: <code>` </code><br>A backtick-delimited string in a code span: <code>`foo` </code><br><code>&amp;#8212;</code> is the decimal-encoded equivalent of <code>&amp;mdash;</code>.<br><code>git archive master --format=zip ＞ `git describe master`.zip</code></p>
<p>标准 Markdown 不支持脚标, 只能通过内嵌 HTML 的<code>&lt;sup&gt;</code>和<code>&lt;sub&gt;</code>标签来实现<br>比如 <code>H&lt;sub&gt;2&lt;/sub&gt;O</code> 将生成 H<sub>2</sub>O</p>
<p>可以直接在反引号里面写html代码</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">th</span> <span class="attribute">rowspan</span>=<span class="value">"2"</span>&gt;</span>值班人员<span class="tag">&lt;/<span class="title">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">th</span>&gt;</span>星期一<span class="tag">&lt;/<span class="title">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">th</span>&gt;</span>星期二<span class="tag">&lt;/<span class="title">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">th</span>&gt;</span>星期三<span class="tag">&lt;/<span class="title">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">td</span>&gt;</span>李强<span class="tag">&lt;/<span class="title">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">td</span>&gt;</span>张明<span class="tag">&lt;/<span class="title">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">td</span>&gt;</span>王平<span class="tag">&lt;/<span class="title">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>表格</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">|产品|价格|</span><br><span class="line">|---|--:|</span><br><span class="line">|Leanote 高级账号|<span class="number">60</span>元/年|</span><br><span class="line">|Leanote 超级账号|<span class="number">120</span>元/年 `<span class="built_in">print</span>(<span class="string">"Format with CodeRay"</span>)`|</span><br><span class="line"></span><br><span class="line">|学号|姓名|分数|</span><br><span class="line">|------|-----|---------|</span><br><span class="line">|小明|男|<span class="number">75</span>|</span><br><span class="line">|小红|女|<span class="number">79</span>|</span><br><span class="line">|小陆|男|<span class="number">92</span>|</span><br></pre></td></tr></table></figure>
</li>
<li><p>分割线</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">*</span> <span class="keyword">*</span> <span class="keyword">*</span></span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">- - -</span><br><span class="line">---------------------------------------</span><br></pre></td></tr></table></figure>
</li>
<li><p>LaTex公式</p>
<ul>
<li><p>$ 表示行内公式：</p>
  <figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">质能守恒方程可以用一个很简洁的方程式 <span class="variable">$E</span>=mc^<span class="number">2</span>$ 来表达。</span><br></pre></td></tr></table></figure>
<p>  质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。</p>
</li>
<li><p>$$ 表示整行公式：每个公式要隔一行</p>
  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$\sum_&#123;i=<span class="number">1</span>&#125;^n a_i=<span class="number">0</span>$$</span><br><span class="line">$$f(x_1,x_x,\ldots,x_n) = x_1^<span class="number">2</span> + x_2^<span class="number">2</span> + \cdots + x_n^<span class="number">2</span> $$</span><br><span class="line">$$\sum^&#123;j-<span class="number">1</span>&#125;_&#123;k=<span class="number">0</span>&#125;&#123;\widehat&#123;\gamma&#125;_&#123;kj&#125; z_k&#125;$$ <span class="preprocessor">#测试不成功</span></span><br></pre></td></tr></table></figure>
<p>  $$\sum_{i=1}^n a_i=0$$</p>
<p>  $$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2 $$</p>
<p>  $$ {\gamma} $$</p>
</li>
</ul>
</li>
<li><p>流程图 <a href="http://adrai.github.io/flowchart.js/" title="http://adrai.github.io/flowchart.js/" target="_blank" rel="external">更多</a></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">flow</span><br><span class="line">st=&gt;start: Start:&gt;https:<span class="comment">//www.zybuluo.com</span></span><br><span class="line">io=&gt;inputoutput: verification</span><br><span class="line">op=&gt;operation: Your Operation</span><br><span class="line">cond=&gt;condition: Yes <span class="keyword">or</span> No?</span><br><span class="line">sub=&gt;subroutine: Your Subroutine</span><br><span class="line">e=&gt;end</span><br><span class="line">st-&gt;io-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;sub-&gt;io</span><br></pre></td></tr></table></figure>
</li>
<li><p><a href="http://bramp.github.io/js-sequence-diagrams/" title="http://bramp.github.io/js-sequence-diagrams/" target="_blank" rel="external">序列图</a> </p>
</li>
<li><p>其他</p>
<pre><code>[TOC]
[图标](http://fortawesome.github.io/Font-Awesome/3.2.1/icons/ &quot;http://fortawesome.github.io/Font-Awesome/3.2.1/icons/&quot;)
</code></pre></li>
</ol>
<p id="end">The end！</p>

<p>参考<br><a href="http://blog.leanote.com/post/freewalk/Markdown-语法手册" title="http://blog.leanote.com/post/freewalk/Markdown-语法手册" target="_blank" rel="external">Markdown-语法手册</a><br><a href="https://guides.github.com/features/mastering-markdown/" title="https://guides.github.com/features/mastering-markdown/" target="_blank" rel="external">Mastering Markdown</a><br><a href="http://blog.csdn.net/phunxm/article/details/49565427" target="_blank" rel="external">Markdown详解</a><br><a href="http://zipperary.com/2013/06/02/hexo-guide-5/" target="_blank" rel="external">Hexo</a><br><a href="http://bellaciela.com/blog/2015/advanced-hexo/#toctable-of-content" target="_blank" rel="external">Hexo进阶</a></p>
<div id="footnotes"><hr><div id="footnotelist"><ol><li id="fn:1">Footnote_Text<a href="#fnref:1" rev="footnote">↩</a></li></ol></div></div>]]></content>
    <summary type="html">
    <![CDATA[<h3 id="u7F16_u8F91_u5668"><a href="#u7F16_u8F91_u5668" class="headerlink" title="编辑器"></a>编辑器</h3><p>由于使用sublime，因此博主使用的是sublime的插件ominiMar]]>
    </summary>
    
      <category term="markdown" scheme="http://silveringsea.github.io/tags/markdown/"/>
    
      <category term="tools" scheme="http://silveringsea.github.io/categories/tools/"/>
    
  </entry>
  
</feed>
